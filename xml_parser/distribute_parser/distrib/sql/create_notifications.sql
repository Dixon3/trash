--Start Create Tables-------------------------------------
create table _notf (id integer,notificationNumber text,versionNumber integer,createDate text,orderName text,publishDate text,href text,uid SERIAL PRIMARY KEY,file_id integer references files_list(id) on delete cascade);
create table _notf_EP (code text,name text,url text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf(uid) on delete cascade);
create table _notf_competitiveDocumentProvisioning (www text,deliveryTerm text,deliveryTerm2 text,deliveryPlace text,deliveryProcedure text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf(uid) on delete cascade );
create table _notf_competitiveDocumentProvisioning_guarantee (procedure text,amount text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_competitiveDocumentProvisioning(uid) on delete cascade );
create table _notf_competitiveDocumentProvisioning_guarantee_currency (code text,name text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_competitiveDocumentProvisioning_guarantee(uid) on delete cascade );
create table _notf_contactInfo (orgName text,orgFactAddress text,orgPostAddress text,contactEMail text,contactPhone text,contactFax text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf(uid) on delete cascade );
create table _notf_contactInfo_contactPerson (lastName text,firstName text,middleName text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_contactInfo(uid) on delete cascade );
create table _notf_documentMetas (uid SERIAL PRIMARY KEY, parent_uid bigint references _notf(uid) on delete cascade );
create table _notf_documentMetas_documentMeta (sid text,fileName text,docDescription text,url text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_documentMetas(uid) on delete cascade );
create table _notf_documentMetas_documentMeta_cryptoSigns (signature text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_documentMetas_documentMeta(uid) on delete cascade );
create table _notf_lots (uid SERIAL PRIMARY KEY, parent_uid bigint references _notf(uid) on delete cascade );
create table _notf_lots_lot (sid text,ordinalNumber text,subject text,infoProduct text,priceNotSet text,quantityUndefined text,energyType text,energyServiceEconomy text,appForm text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots(uid) on delete cascade );
create table _notf_lots_lot_auctionItems (uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot(uid) on delete cascade );
create table _notf_lots_lot_auctionItems_auctionItem (sid text,description text,price numeric,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_auctionItems(uid) on delete cascade );
create table _notf_lots_lot_auctionProducts (uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot(uid) on delete cascade );
create table _notf_lots_lot_auctionProducts_auctionProduct (sid text,ordinalNumber text,productName text,tradeMark text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_auctionProducts(uid) on delete cascade );
create table _notf_lots_lot_auctionProducts_auctionProduct_equivalenceParam (sid text,ordinalNumber text,name text,paramType text,paramValue text,modifiable text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_auctionProducts_auctionProduct(uid) on delete cascade );
create table _notf_lots_lot_auctionProducts_auctionProduct_productReq (sid text,ordinalNumber text,requirement text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_auctionProducts_auctionProduct(uid) on delete cascade );
create table _notf_lots_lot_currency (code text,name text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot(uid) on delete cascade );
create table _notf_lots_lot_customerReqs (uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot(uid) on delete cascade );
create table _notf_lots_lot_customerReqs_customerReq (sid text,quantity text,maxPrice text,deliveryPlace text,deliveryTerm text,financeSource text,paymentCondition text,additionalInfo text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_customerReqs(uid) on delete cascade );
create table _notf_lots_lot_customerReqs_customerReq_KBK (kbk1 text,kbk2 text,kbk3 text,kbk4 text,kbk5 text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_customerReqs_customerReq(uid) on delete cascade );
create table _notf_lots_lot_customerReqs_customerReq_customer (regNum bigint,fullName text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_customerReqs_customerReq(uid) on delete cascade );
create table _notf_lots_lot_customerReqs_customerReq_guaranteeApp (procedure text,settlementAccount text,personalAccount text,bik text,amount text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_customerReqs_customerReq(uid) on delete cascade );
create table _notf_lots_lot_customerReqs_customerReq_guaranteeContract (procedure text,isBail text,amount text,settlementAccount text,personalAccount text,bik text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_customerReqs_customerReq(uid) on delete cascade );
create table _notf_lots_lot_documentReqs (uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot(uid) on delete cascade );
create table _notf_lots_lot_documentReqs_documentReq (sid text,ordinalNumber text,reqValue text,docName text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_documentReqs(uid) on delete cascade );
create table _notf_lots_lot_lotDocReqs (uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot(uid) on delete cascade );
create table _notf_lots_lot_lotDocReqs_docReq_1111 (uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_lotDocReqs_docReq_1_1(uid) on delete cascade );
create table _notf_lots_lot_lotDocReqs_docReq_1111_documentReq (sid text,ordinalNumber text,reqValue text,docName text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_lotDocReqs_docReq_1111(uid) on delete cascade );
create table _notf_lots_lot_lotDocReqs_docReq_1211 (uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_lotDocReqs_docReq_1_2(uid) on delete cascade );
create table _notf_lots_lot_lotDocReqs_docReq_1_2_11_documentReq (sid text,ordinalNumber text,reqValue text,docName text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_lotDocReqs_docReq_1211(uid) on delete cascade );
create table _notf_lots_lot_lotDocReqs_docReq_2111 (uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_lotDocReqs_docReq_2_1(uid) on delete cascade );
create table _notf_lots_lot_lotDocReqs_docReq_2111_documentReq (sid text,ordinalNumber text,reqValue text,docName text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_lotDocReqs_docReq_2111(uid) on delete cascade );
create table _notf_lots_lot_notifFeats (uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot(uid) on delete cascade );
create table _notf_lots_lot_notifFeats_notifFeat (prefValue text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_notifFeats(uid) on delete cascade);
create table _notf_lots_lot_notifFeats_notifFeat_placementFeat (code text,name text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_notifFeats_notifFeat(uid) on delete cascade );
create table _notf_lots_lot_products (uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot(uid) on delete cascade );
create table _notf_lots_lot_products_product (code text,name text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_lots_lot_products(uid) on delete cascade );
create table _notf_modification (initiativeType text,modificationDate text,info text,authorityType text,authorityName text,desNumber text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf(uid) on delete cascade );
create table _notf_notifCom (p1Date text,p2Date text,p3Date text,p1Place text,p2Place text,signTerm text,p3Place text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf(uid) on delete cascade );
create table _notf_notifPlacement (deliveryTerm text,deliveryPlace text,additionalInfo text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf(uid) on delete cascade );
create table _notf_notifPlacement_guaranteeApp (procedure text,settlementAccount text,personalAccount text,bik text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_notifPlacement(uid) on delete cascade );
create table _notf_notifPlacement_guaranteeContract (procedure text,isBail text,settlementAccount text,personalAccount text,bik text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_notifPlacement(uid) on delete cascade );
create table _notf_notifPlacement_notifFeats (uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_notifPlacement(uid) on delete cascade );
create table _notf_notifPlacement_notifFeats_notifFeat (uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_notifPlacement_notifFeats(uid) on delete cascade );
create table _notf_notifPlacement_notifFeats_notifFeat_placementFeat (code text,name text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_notifPlacement_notifFeats_notifFeat(uid) on delete cascade );
create table _notf_order (placerOrgType text,initiatorOrgRole text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf(uid) on delete cascade );
create table _notf_order_initiator (regNum bigint,fullName text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_order(uid) on delete cascade );
create table _notf_order_placer (regNum bigint,fullName text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_order(uid) on delete cascade );
create table _notf_placingWay (code text,name text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf(uid) on delete cascade );
create table _notf_printForm (fileName text,url text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf(uid) on delete cascade );
create table _notf_printForm_cryptoSigns (signature text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notf_printForm(uid) on delete cascade );
create table _notifCancel (id integer,notificationNumber text,versionNumber integer,uid SERIAL PRIMARY KEY, file_id integer references files_list(id) on delete cascade);create table _notifCancel_documentMetas (uid SERIAL PRIMARY KEY, parent_uid bigint references _notifCancel(uid) on delete cascade );
create table _notifCancel_documentMetas_documentMeta (sid text,fileName text,docDescription text,url text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notifCancel_documentMetas(uid) on delete cascade );
create table _notifCancel_documentMetas_documentMeta_cryptoSigns (signature text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notifCancel_documentMetas_documentMeta(uid) on delete cascade );
create table _notifCancel_lots (uid SERIAL PRIMARY KEY, parent_uid bigint references _notifCancel(uid) on delete cascade );
create table _notifCancel_lots_lot (ordinalNumber text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notifCancel_lots(uid) on delete cascade );
create table _notifCancel_modification (initiativeType text,modificationDate text,info text,authorityType text,authorityName text,desNumber text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notifCancel(uid) on delete cascade );
create table _notifCancel_printForm (fileName text,url text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notifCancel(uid) on delete cascade );
create table _notifCancel_printForm_cryptoSigns (signature text,uid SERIAL PRIMARY KEY, parent_uid bigint references _notifCancel_printForm(uid) on delete cascade );
--End Create Tables---------------------------------------
